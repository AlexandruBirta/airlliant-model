package ro.unibuc.fmi.airlliantmodel.entity;


import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import org.hibernate.Hibernate;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import org.springframework.validation.annotation.Validated;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Objects;


@Schema
@Validated
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString
@Entity
public class Payment {

    @Schema(description = "ID autogenerated by database.")
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    @EqualsAndHashCode.Exclude
    private Long id;

    @Schema
    @NotNull(message = "Ticket ID must not be null.")
    private Long ticketId;

    @Schema
    @NotNull(message = "Amount must not be null.")
    private BigDecimal amount;

    @Schema(description = "ISO8583 error code.")
    @NotNull(message = "Status code must not be null.")
    private String statusCode;

    @Schema(description = "ISO8583 error message.")
    @NotNull(message = "Status message must not be null.")
    private String statusMessage;

    @Schema(description = "Autogenerated ISO8601 timestamp upon creation.")
    @CreationTimestamp
    @Column(updatable = false)
    private LocalDateTime insertedDate;

    @Schema(description = "Autogenerated ISO8601 timestamp upon update.")
    @UpdateTimestamp
    private LocalDateTime updatedDate;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
        Payment that = (Payment) o;
        return id != null && Objects.equals(id, that.id);
    }

    @Override
    public int hashCode() {
        return getClass().hashCode();
    }

}
